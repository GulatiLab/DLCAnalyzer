%% Read csv file generated by DeepLabCut
%  Author - Aamir Abbasi
%% --------------------------------------
clc;clear;close all;
start = tic;
disp('running...');
rootpath = 'Z:\Aamir\BMI\';
savepath = 'Z:\Aamir\BMI\';
cd(rootpath);
% bmiBlocks = {'I076\Data\I076-201201-120931\'...
%             ,'I076\Data\I076-201201-141645\'...
%             ,'I076\Data\I076-201202-112106\'...
%             ,'I076\Data\I076-201202-142652\'...
%             ,'I076\Data\I076-201203-113433\'...
%             ,'I076\Data\I076-201203-131642\'...
%             ,'I076\Data\I076-201204-121406\'...
%             ,'I076\Data\I076-201204-141944\'...
%             ,'I076\Data\I076-201205-112030\'...
%             ,'I076\Data\I076-201205-125511\'};

% bmiBlocks = {  'I086\Data\I086-210507-104527\'...
%               ,'I086\Data\I086-210511-120330\'...
%               ,'I086\Data\I086-210512-134507\'...
%               ,'I086\Data\I086-210513-121746\'...
%               ,'I086\Data\I086-210514-104903\'};
          
bmiBlocks = {  'I096/Data/I096-211102-112930/'...
              ,'I096/Data/I096-211103-122447/'...
              ,'I107/Data/I107-211208-151652/'...
              ,'I107/Data/I107-211209-145631/'...
              ,'I107/Data/I107-211210-121406/'};          
                                        
fps = 30;
figure('Color','white','Position',[434 311 1169 519]);
for j=2:length(bmiBlocks)
  
  % display current block
  disp(bmiBlocks{j});
  
  csv_files = dir([rootpath,bmiBlocks{j},'Videos\*.csv']);
  load([rootpath,bmiBlocks{j},'\Events_Performance_PSTH.mat'],'performance');
  
  currentpath_fig  = [savepath,bmiBlocks{j}(1:5),'Figs\',bmiBlocks{j}(11:end),'\Trajectories_DLC\'];
  currentpath_data = [savepath,bmiBlocks{j}(1:5),'Data\',bmiBlocks{j}(11:end)];  
  
  for i=1:size(csv_files,1)
    M = csvread([rootpath,bmiBlocks{j},'Videos\',csv_files(i).name],4);
    
    forepaw_dxx = diff(M(:,2));
    forepaw_dyy = diff(M(:,3));
    displacement_forepaw = sqrt((forepaw_dxx).^2 + (forepaw_dyy).^2);
    
    pipe_dxx = diff(M(:,11));
    pipe_dyy = diff(M(:,12));
    displacement_pipe = sqrt((pipe_dxx).^2 + (pipe_dyy).^2);
    
    subplot(1,2,1);
    plot((1:length(displacement_forepaw))./fps,displacement_forepaw);
    hold on;
    plot((1:length(displacement_pipe))./fps,displacement_pipe);
    vline(2,'k--');
    if performance(i) == 15
      vline(performance(i)-5,'k');
    else
      vline(performance(i)+2,'k');
    end
    title(['Trial-',num2str(i)]);
    legend('forepaw','pipe');
    
    subplot(1,2,2);
    if performance == 15
      X = displacement_forepaw(round(2*fps):round((performance(i))*fps));
      Y = displacement_pipe(round(2*fps):round((performance(i))*fps));
      [C,lags] = xcorr(X,Y,'none');
      R = corrcoef(X,Y);
    else
      X = displacement_forepaw(round(2*fps):round((performance(i)+1.5)*fps));
      Y = displacement_pipe(round(2*fps):round((performance(i)+1.5)*fps));
      [C,lags] = xcorr(X,Y,'none');
      R = corrcoef(X,Y);
    end
    sum_C = C./sum(C);
    plot(lags,C,'k');
    
    if ~exist(currentpath_fig, 'dir')
      mkdir(currentpath_fig);
    end
    saveas(gcf,[currentpath_fig,'Trajectory_Trial_',num2str(i),'.tiff']);
    
    mean_C(i) = mean(C(lags>-3&lags<3));
    mean_sumC(i) = mean(sum_C(lags>-3&lags<3));
    corrcoeff_R(i) = R(1,2);
    clf;
  end
  plot(mean_C);
  saveas(gcf,[currentpath_fig,'Trajectory_Correlation.tiff']);
  
  % Save correlation data
  save([currentpath_data,'CC_ForepawPipe_DLC.mat'],'mean_C','corrcoeff_R','mean_sumC');
  
  % Clear common variables
  clear mean_C corrcoeff_R
end
runTime = toc(start);
disp(['done! time elapsed (minutes) - ', num2str(runTime/60)]);

%% Read pipe base from csv file generated by DeepLabCut
clc;clear;close all;
start = tic;
disp('running...');
rootpath = 'Z:\Aamir\BMI\';
savepath = 'Z:\Aamir\BMI\';
cd(rootpath);
bmiBlocks =  { 'I076\Data\I076-201201-120931'...
              ,'I076\Data\I076-201202-112106'...
              ,'I076\Data\I076-201203-113433'...
              ,'I076\Data\I076-201205-112030'...
              ,'I086\Data\I086-210507-104527'...
              ,'I086\Data\I086-210511-120330'...
              ,'I086\Data\I086-210512-134507'...
              ,'I086\Data\I086-210513-121746'...
              ,'I086\Data\I086-210514-104903'...
              ,'I096\Data\I096-211102-112930'...
              ,'I096\Data\I096-211103-122447'...
              ,'I107\Data\I107-211208-151652'...
              ,'I107\Data\I107-211209-145631'...
              ,'I107\Data\I107-211210-121406'};          
                                        
fps = 30;
figure('Color','white','Position',[434 311 1169 519]);
handedness = [ones(1,4) zeros(1,7) ones(1,3)];
for j=1:length(bmiBlocks)
  
  % display current block
  disp(bmiBlocks{j});
  
  csv_files = dir([rootpath,bmiBlocks{j},'\Videos\*.csv']);
  load([rootpath,bmiBlocks{j},'\Events_Performance_PSTH.mat'],'performance');
  
  currentpath_fig  = [savepath,bmiBlocks{j}(1:5),'Figs\',bmiBlocks{j}(11:end),'\Trajectories_DLC\'];
  currentpath_data = [savepath,bmiBlocks{j}(1:5),'Data\',bmiBlocks{j}(11:end)];  
  
  for i=1:size(csv_files,1)
    M = csvread([rootpath,bmiBlocks{j},'\Videos\',csv_files(i).name],4);
    
    if handedness(j) == 0
        forepaw_dxx = diff(M(:,2));
        forepaw_dyy = diff(M(:,3));
    else
        forepaw_dxx = diff(M(:,5));
        forepaw_dyy = diff(M(:,6));
    end
    
    displacement_forepaw = sqrt((forepaw_dxx).^2 + (forepaw_dyy).^2);
    
    pipe_dxx = diff(M(:,14));
    pipe_dyy = diff(M(:,15));
    displacement_pipe = sqrt((pipe_dxx).^2 + (pipe_dyy).^2);
    
    subplot(1,2,1);
    plot((1:length(displacement_forepaw))./fps,displacement_forepaw);
    hold on;
    plot((1:length(displacement_pipe))./fps,displacement_pipe);
    vline(2,'k--');
    if performance(i) == 15
      vline(performance(i)-5,'k');
    else
      vline(performance(i)+2,'k');
    end
    title(['Trial-',num2str(i)]);
    legend('forepaw','pipe');
    
    subplot(1,2,2);
    if performance == 15
      X = displacement_forepaw(round(2*fps):round((performance(i))*fps));
      Y = displacement_pipe(round(2*fps):round((performance(i))*fps));
      [C,lags] = xcorr(X,Y,'none');
      R = corrcoef(X,Y);
    else
      X = displacement_forepaw(round(2*fps):round((performance(i)+1.5)*fps));
      Y = displacement_pipe(round(2*fps):round((performance(i)+1.5)*fps));
      [C,lags] = xcorr(X,Y,'none');
      R = corrcoef(X,Y);
    end
    sum_C = C./sum(C);
    plot(lags,C,'k');
    
    if ~exist(currentpath_fig, 'dir')
      mkdir(currentpath_fig);
    end
    saveas(gcf,[currentpath_fig,'Trajectory_wPipeBase_Trial_',num2str(i),'.tiff']);
    
    mean_C(i) = mean(C(lags>-3&lags<3));
    mean_sumC(i) = mean(sum_C(lags>-3&lags<3));
    corrcoeff_R(i) = R(1,2);
    clf;
  end
  plot(mean_C);
  saveas(gcf,[currentpath_fig,'Trajectory_Correlation_wPipeBase.tiff']);
  
  % Save correlation data
  save([currentpath_data,'\CC_ForepawPipeBase_DLC.mat'],'mean_C','corrcoeff_R','mean_sumC');
  
  % Clear common variables
  clear mean_C corrcoeff_R
end
runTime = toc(start);
disp(['done! time elapsed (minutes) - ', num2str(runTime/60)]);

%%